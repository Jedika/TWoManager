# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CheckTokenOutput {
  userId: ID!
  userName: String!
  login: String!
  photo: String
  type: String!
  status: Boolean!
  iat: Int!
  exp: Int!
}

type ClientEntity {
  clientId: ID!
  clientName: String!
  domicile: String
  contact: String
}

input ClientInput {
  clientId: ID
  clientName: String!
  domicile: String
  contact: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type FolderEntity {
  folderId: ID!
  register: String!
  numTitle: String!
  groundName: String!
  localisationTrav: String!
  fokontany: String!
  dateTrav: DateTime!
  typeTrav: String!
  price: Float!
}

input LoginInput {
  login: String!
  password: String!
}

type LoginOutput {
  token: String
  type: String
}

type Mutation {
  login(input: LoginInput!): LoginOutput!
  register(input: RegisterInput!): UserOutput!
  uploadFile(login: String!, file: Upload!): Boolean!
  addClientByUser(input: ClientInput!): ClientEntity!
}

type PaginateUserClients {
  hasMore: Boolean!
  cursor: Int!
  clients: [ClientEntity!]!
}

type Query {
  loginSession(input: LoginInput!): Boolean!
  checkToken(input: String!): CheckTokenOutput!
  users: [UserEntity!]
  usersCount: Int!
  clientListByUser: [ClientEntity!]!
  userClients(after: Float!, pageSize: Float!): PaginateUserClients!
}

input RegisterInput {
  userName: String!
  login: String!
  password: String!
  photo: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type UserEntity {
  userId: ID!
  userName: String!
  login: String!
  password: String!
  photo: String
  type: String
  status: Boolean
  folders: [FolderEntity!]!
}

type UserOutput {
  userId: ID!
  userName: String!
  login: String!
  photo: String
  type: String
  status: Boolean
}
