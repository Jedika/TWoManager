# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CheckTokenOutput {
  exp: Int!
  iat: Int!
  login: String!
  photo: String
  status: Boolean!
  type: String!
  userId: ID!
  userName: String!
}

type ClientEntity {
  clientId: ID!
  clientName: String!
  contact: String
  domicile: String
}

input ClientInput {
  clientId: ID
  clientName: String!
  contact: String
  domicile: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type FolderEntity {
  dateTrav: DateTime!
  fokontany: String!
  folderId: ID!
  groundName: String!
  localisationTrav: String!
  numTitle: String!
  price: Float!
  register: String!
  typeTrav: String!
}

input LogInInput {
  login: String!
  password: String!
}

type LogInOutput {
  token: String
  type: String
}

type Mutation {
  addClientByUser(input: ClientInput!): ClientEntity!
  checkToken(input: String!): CheckTokenOutput!
  login(input: LogInInput!): LogInOutput!
  loginSession(input: LogInInput!): Boolean!
  register(input: RegisterInput!): UserOutput!
  uploadFile(file: Upload!, login: String!): Boolean!
}

type PaginateUserClients {
  clients: [ClientEntity!]!
  countRow: Int!
  cursor: Int!
  hasMore: Boolean!
}

type Query {
  clientListByUser: [ClientEntity!]!
  userClients(after: Float!, pageSize: Float!): PaginateUserClients!
  users: [UserEntity!]
  usersCount: Int!
}

input RegisterInput {
  login: String!
  password: String!
  photo: String
  userName: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type UserEntity {
  folders: [FolderEntity!]!
  login: String!
  password: String!
  photo: String
  status: Boolean
  type: String
  userId: ID!
  userName: String!
}

type UserOutput {
  login: String!
  photo: String
  status: Boolean
  type: String
  userId: ID!
  userName: String!
}
